generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @unique @default(uuid())
  name       String
  email      String      @unique
  password   String
  status     UserStatus  @default(ACTIVE)
  role       UserRole    @default(USER)
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  foundItems FoundItem[]
  claims     Claim[]
  profile    Profile?

  @@map("users")
}

model Profile {
  id        String   @id @unique @default(uuid())
  userId    String   @unique
  bio       String
  age       Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model FoundItemCategory {
  id         String      @id @unique @default(uuid())
  name       String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  foundItems FoundItem[]

  @@map("found_item_categories")
}

model FoundItem {
  id            String            @id @unique @default(uuid())
  userId        String
  categoryId    String
  foundItemName String
  description   String
  location      String
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  user          User              @relation(fields: [userId], references: [id])
  category      FoundItemCategory @relation(fields: [categoryId], references: [id])
  claims        Claim[]

  @@map("found_items")
}

model Claim {
  id                     String      @id @unique @default(uuid())
  userId                 String
  foundItemId            String
  status                 ClaimStatus @default(PENDING)
  distinguishingFeatures String
  lostDate               DateTime
  createdAt              DateTime    @default(now())
  updatedAt              DateTime    @updatedAt
  user                   User        @relation(fields: [userId], references: [id])
  foundItem              FoundItem   @relation(fields: [foundItemId], references: [id])

  @@map("claims")
}

enum ClaimStatus {
  PENDING
  APPROVED
  REJECTED
}

enum UserStatus {
  ACTIVE
  DEACTIVATE
}

enum UserRole {
  USER
  ADMIN
}
